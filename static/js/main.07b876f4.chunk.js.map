{"version":3,"sources":["component/Title.js","actions/index.js","constants/actionType.js","component/TaskSearch.js","component/TaskSort.js","component/TaskControl.js","component/TaskForm.js","component/TaskItem.js","component/TaskList.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/isShowForm.js","reducers/taskSelected.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["Title","className","Component","editTask","task","type","TaskSearch","props","onSearch","state","strSearch","onClear","setState","onChange","event","target","value","this","name","placeholder","onClick","connect","dispatch","keyword","TaskSort","sortBy","sortDir","onSortTask","console","log","sort","data-toggle","style","lineHeight","href","role","onSort","actions","TaskControl","onToggleForm","taskSelected","id","onOpenForm","onClearForm","status","level","elemButton","isShowForm","TaskForm","onCancel","onCloseForm","onSubmit","preventDefault","onSaveTask","nextProp","htmlFor","required","TaskItem","onDelete","onDeleteTask","onEdit","onEditTask","index","showLevel","showStatus","elemLevel","elemStatus","TaskList","tasks","tasksOrigin","_","filter","includes","toLowerCase","elemTask","orderBy","map","key","verticalAlign","fontWeight","colSpan","App","width","Boolean","window","location","hostname","match","uuidv4","require","v4","data","JSON","parse","localStorage","getItem","initialState","findIndex","rs","forEach","myReducer","action","push","setItem","stringify","remove","combineReducers","store","createStore","myReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07b876f4.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\n\r\nclass Title extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"card-header\">\r\n                    <h1>To Do List</h1>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Title;","import * as types from './../constants/actionType';\r\n\r\nexport const taskAll = () =>{\r\n    return {\r\n        type : types.TASK_ALL\r\n    }\r\n}\r\nexport const saveTask = (task) => {\r\n    return {\r\n        type : types.SAVE_TASK,\r\n        task,\r\n    }\r\n}\r\nexport const toggleForm = () => {\r\n    return {\r\n        type : types.TOGGLE_FORM,\r\n    }\r\n}\r\nexport const closeForm = () => {\r\n    return {\r\n        type : types.CLOSE_FORM,\r\n    }\r\n}\r\nexport const openForm = () => {\r\n    return {\r\n        type : types.OPEN_FORM,\r\n    }\r\n}\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type : types.DELETE_TASK,\r\n        id\r\n    }\r\n}\r\nexport const editTask = (task) => {\r\n    return {\r\n        type : types.EDIT_TASK,\r\n        task\r\n    }\r\n}\r\nexport const searchTask = (keyword) => {\r\n    return {\r\n        type : types.SEARCH_TASK,\r\n        keyword\r\n    }\r\n}\r\nexport const sortTask = (sort) => {\r\n    return {\r\n        type : types.SORT_TASK,\r\n        sort\r\n    }\r\n}\r\n","export const TASK_ALL = 'TASK_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SEARCH_TASK = 'SEARCH_TASK';\r\nexport const SORT_TASK = 'SORT_TASK';\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskSearch extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            strSearch: '',\r\n        }\r\n        \r\n    }\r\n    onSearch = () => {\r\n        \r\n       this.props.onSearch(this.state.strSearch);\r\n    }\r\n    onClear = () => {\r\n        this.setState({\r\n            strSearch :  '',\r\n         })\r\n         this.props.onSearch('');\r\n    }\r\n    onChange = (event) => {\r\n        this.setState({\r\n           strSearch :  event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 my-2\">\r\n                <div className=\"input-group\">\r\n                    <input value={this.state.strSearch} onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"search\" placeholder=\"Search for...\"  />\r\n                    <div className=\"input-group-prepend\">\r\n                        <button onClick={this.onClear} type=\"reset\" className=\"btn btn-primary\"><i className=\"fa fa-close\"></i></button>\r\n                        <button onClick={this.onSearch} type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n  const mapDispatchToProps = (dispatch , props) =>{\r\n    return {\r\n      \r\n      onSearch      : (strSearch) =>{\r\n        dispatch(actions.searchTask(strSearch))\r\n      }\r\n    }\r\n  }\r\n  export default connect(null, mapDispatchToProps)(TaskSearch);\r\n","import React ,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskSort extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    onSort(sortBy , sortDir){\r\n        this.props.onSortTask({\r\n            sortBy : sortBy,\r\n            sortDir : sortDir\r\n        });\r\n    }    \r\n    render(){\r\n        console.log(this.props.sort);\r\n        return(\r\n            \r\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-2 my-2\">\r\n                <div className=\"btn-group btn-block\">\r\n                    <button type=\"button\" className=\"btn btn-block btn-warning text-white dropdown-toggle\" data-toggle=\"dropdown\">\r\n                        Sort\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('','')}>None sort</a></li>\r\n                        <li className=\"dropdown-divider\"></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('name','asc')}>Name ASC</a></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('name','desc')}>Name DESC</a></li>\r\n                        <li className=\"dropdown-divider\"></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('level','asc')}>Level ASC</a></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('level','desc')}>Level DESC</a></li>\r\n                        <li className=\"dropdown-divider\"></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('status','asc')}>Status ASC</a></li>\r\n                        <li style={{lineHeight:1}}><a className=\"dropdown-item\" href=\"/#\" role=\"button\" onClick={() => this.onSort('status','desc')}>Status DESC</a></li>\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      sort : state.sort\r\n      }\r\n    }\r\n  \r\nconst mapDispatchToProps = (dispatch , props) =>{\r\n    return {\r\n      \r\n      onSortTask  : (sort) =>{\r\n        dispatch(actions.sortTask(sort))\r\n      }\r\n    }\r\n  }\r\n  export default connect(mapStateToProps, mapDispatchToProps)(TaskSort);","import React ,{Component} from 'react';\r\nimport TaskSearch from './TaskSearch';\r\nimport TaskSort from './TaskSort';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskControl extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        \r\n    }\r\n    onToggleForm = () => {\r\n      if(this.props.taskSelected && this.props.taskSelected.id != null){\r\n        this.props.onOpenForm();\r\n      }else{\r\n        this.props.onToggleForm();\r\n        \r\n      }\r\n      this.props.onClearForm({\r\n        id : null,\r\n        name : '',\r\n        status : 0,\r\n        level : 0,\r\n       });\r\n       \r\n    }\r\n     render(){\r\n       \r\n            \r\n        var elemButton = <button onClick={this.onToggleForm} type=\"button\" className=\"btn btn-success btn-block\">Add to do list</button>;\r\n        if(this.props.isShowForm === true){\r\n            elemButton = <button onClick={this.onToggleForm} type=\"button\" className=\"btn btn-danger btn-block\">Close form</button>;\r\n        }\r\n         return (\r\n            <div className=\"card-body pb-0\">\r\n                <div className=\"row\">\r\n                    <TaskSearch />\r\n                    <TaskSort/>\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-6 my-2\">\r\n                        {elemButton}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n     }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n      isShowForm : state.isShowForm,\r\n      taskSelected : state.taskSelected,\r\n      \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch , props) =>{\r\n    return {\r\n      onToggleForm  : () => {\r\n        dispatch(actions.toggleForm());\r\n      },\r\n      onClearForm   : (task) => {\r\n        dispatch(actions.editTask(task));\r\n      },\r\n      onOpenForm    : () => {\r\n        dispatch(actions.openForm());\r\n      },\r\n    }\r\n  }\r\n  export default connect(mapStateToProps, mapDispatchToProps)(TaskControl);","import React ,{Component} from 'react';\r\nimport {connect} from  'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass TaskForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id          : '',\r\n            name        : '',\r\n            status      : 0,\r\n            level       : 0,\r\n        }     \r\n    }\r\n    componentWillMount(){\r\n        if( this.props.taskSelected &&  this.props.taskSelected.id !== ''){\r\n            this.setState({\r\n                id          :  this.props.taskSelected.id,\r\n                name        :  this.props.taskSelected.name,\r\n                level       : + this.props.taskSelected.level,\r\n                status      : + this.props.taskSelected.status,\r\n                \r\n            });\r\n        }else{\r\n            this.onClear();\r\n        } \r\n    }\r\n\r\n    componentWillReceiveProps(nextProp){\r\n        if( nextProp.taskSelected && nextProp.taskSelected.id !== ''){\r\n            this.setState({\r\n                id          : nextProp.taskSelected.id,\r\n                name        : nextProp.taskSelected.name,\r\n                level       : +nextProp.taskSelected.level,\r\n                status      : +nextProp.taskSelected.status,\r\n                \r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n    \r\n    onCancel = () => {\r\n        this.props.onCloseForm();    \r\n    }\r\n\r\n    onChange = (event) => {\r\n        \r\n        var target = event.target;\r\n        var value = target.value;\r\n        var name = target.name;\r\n        if(name === 'status'){\r\n            value = +target.value;\r\n        }\r\n        if(name === 'level'){\r\n            value = +target.value;\r\n        }\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSaveTask(this.state);\r\n        this.onClear();\r\n        this.onCancel();\r\n    }\r\n\r\n    onClear = () =>{\r\n        this.setState({\r\n            name        : '',\r\n            status      : 0,\r\n            level       : 0,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.isShowForm) return null;\r\n        return (\r\n            <div className=\"card-body py-0\">\r\n                <div className=\"row \">\r\n                    <div className=\"offset-md-6 offset-lg-6 col-md-6 col-lg-6\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group mx-1\">\r\n                                <label htmlFor=\"name\" >Task Name</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={this.state.name} \r\n                                    onChange={this.onChange} \r\n                                    id=\"name\" \r\n                                    name=\"name\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Task name \"\r\n                                    \r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group mx-1\">\r\n                                <label htmlFor=\"status\" >Status</label>\r\n                                <select \r\n                                \r\n                                className=\"form-control\" \r\n                                name=\"status\" \r\n                                id=\"status\"  \r\n                                value={this.state.status}\r\n                                onChange={this.onChange}\r\n                                required>\r\n                                    <option value={0}>Incomplete</option>\r\n                                    <option value={1}>Completed</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group mx-1\">\r\n                                <label htmlFor=\"level\" >Level</label>\r\n                                <select \r\n                                \r\n                                className=\"form-control\" \r\n                                name=\"level\" \r\n                                id=\"level\"\r\n                                value={this.state.level}\r\n                                onChange={this.onChange}  \r\n                                required>\r\n                                    <option value={0}>Small</option>\r\n                                    <option value={1}>Medium</option>\r\n                                    <option value={2}>High</option>\r\n                                </select>\r\n                            </div>         \r\n                            <div className=\"form-group mx-1\">\r\n                                <button  type=\"submit\" className=\"btn btn-primary mx-2\">Submit</button>\r\n                                <button onClick={this.onCancel} type=\"submit\" className=\"btn btn-warning mx-2\">Cancel</button>\r\n                                \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isShowForm : state.isShowForm,\r\n        taskSelected : state.taskSelected\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch , props) =>{\r\n    return {\r\n        onSaveTask : (task) =>{\r\n            dispatch(actions.saveTask(task));\r\n        },\r\n        onCloseForm : () =>{\r\n            dispatch(actions.closeForm());\r\n          },\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps )(TaskForm);","import React , {Component} from 'react';\r\nimport * as actions from './../actions/index';\r\nimport {connect} from 'react-redux';\r\nclass TaskItem extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }  \r\n    }\r\n    onDelete = () => {\r\n        this.props.onDeleteTask(this.props.task.id);\r\n        this.props.onCloseForm();\r\n    }\r\n\r\n    onEdit = () => {\r\n    \r\n        this.props.onOpenForm();\r\n        this.props.onEditTask(this.props.task);\r\n    }\r\n    render(){\r\n        \r\n        var {task} = this.props;\r\n        var {index} = this.props;\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"text-center\">{index+1}</td>\r\n                <td>{task.name}</td>\r\n                \r\n                <td className=\"text-center\">{this.showLevel(task.level)}</td>\r\n                <td className=\"text-center\">\r\n                {this.showStatus(task.status)}\r\n                </td>\r\n                \r\n                <td className=\"text-center\">\r\n                    <button onClick={this.onDelete} type=\"button\" className=\"btn btn-warning \">\r\n                        <i className=\"fa fa-trash-alt text-white\"></i>\r\n                    </button>\r\n                </td>\r\n                <td>\r\n                    <button onClick={this.onEdit}  type=\"button\" className=\"btn btn-primary\">\r\n                    <i className=\"fa fa-pen text-white\"></i>\r\n                    </button>\r\n                \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n    showLevel(level) {\r\n        let elemLevel = null;\r\n        if(level === 0){\r\n            elemLevel = <span className=\"label bg-success p-1 px-2\">Small</span>;\r\n        }else if(level === 1){\r\n            elemLevel = <span className=\"label bg-warning p-1 px-1\">Medium</span>;\r\n        }else if(level === 2){\r\n            elemLevel = <span className=\"label bg-danger p-1 px-3\">High</span>;\r\n        }\r\n        return elemLevel;\r\n    }\r\n    showStatus(status) {\r\n        let elemStatus = null;\r\n        if(status === 0){\r\n            elemStatus = <span className=\"label text-warning\">Incomplete</span>;\r\n        }else if(status === 1){\r\n            elemStatus = <span className=\"label text-success\">Completed</span>;\r\n        }\r\n        return elemStatus;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch , props) =>{\r\n    return {\r\n        onDeleteTask : (id) =>{\r\n            dispatch(actions.deleteTask(id));\r\n        },\r\n        onEditTask : (task) =>{\r\n            dispatch(actions.editTask(task));\r\n        },\r\n        onCloseForm : () =>{\r\n            dispatch(actions.closeForm());\r\n          },\r\n        onOpenForm : () =>{\r\n            dispatch(actions.openForm());\r\n        },\r\n    }\r\n}\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(TaskItem);","import React , {Component} from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nclass TaskList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           \r\n        }\r\n        \r\n    }\r\n     \r\n    render(){\r\n        var {tasks , strSearch,sort} = this.props;\r\n        var tasksOrigin = [...tasks];\r\n        if(strSearch){\r\n        tasks = _.filter(tasksOrigin,(task)=>{\r\n            return _.includes(task.name.toLowerCase(), strSearch.toLowerCase());\r\n        });\r\n        }\r\n\r\n        tasks = _.orderBy(tasks,[sort.sortBy],[sort.sortDir]);\r\n\r\n        var elemTask = tasks.map((task , index)=>{\r\n            return (\r\n                <TaskItem \r\n                    key={task.id} \r\n                    task={task} \r\n                    index={index}\r\n                />  \r\n            );\r\n        });\r\n         \r\n        return(\r\n            <div className=\"card-body\">\r\n            <h2 className=\"text-center\">List Task</h2>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr className=\"text-center title-column\">\r\n                            <th style={{verticalAlign: 'middle', fontWeight: 400}}>#</th>\r\n                            <th style={{verticalAlign: 'middle',fontWeight: 400}}>Name task</th>          \r\n                            <th style={{verticalAlign: 'middle',fontWeight: 400}}>Level</th>\r\n                            <th style={{verticalAlign: 'middle',fontWeight: 400}}>Status</th>\r\n                            <th colSpan={2} className=\"text-default\" style={{verticalAlign: 'middle'}}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {elemTask}\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks : state.tasks,\r\n        strSearch : state.strSearch,\r\n        sort : state.sort\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , null)(TaskList);","import React, { Component } from 'react';\nimport Title from './component/Title';\nimport TaskControl from './component/TaskControl';\nimport TaskForm from './component/TaskForm';\nimport TaskList from './component/TaskList';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n \n    }; \n  }\n\n  render(){\n\n    return (\n        <div className=\"row\">\n            <div className=\"card\" style={{width: '100%'}}>\n                <Title/>\n                <TaskControl/>\n                <TaskForm /> \n                <TaskList /> \n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './../constants/actionType';\r\nimport _ from 'lodash';\r\nconst {v4 : uuidv4} = require('uuid');\r\n\r\nvar data = JSON.parse(localStorage.getItem('tasks'));\r\nvar initialState = data ? data : [];\r\n\r\nvar findIndex = (tasks , id) =>{\r\n    var rs = -1;\r\n    tasks.forEach((task,index)=>{\r\n      if(task.id === id){\r\n        rs = index;\r\n      }\r\n    });\r\n    return rs;\r\n  }\r\n\r\nvar myReducer = (state = initialState , action) =>{\r\n    var index = -1;\r\n    switch(action.type){\r\n        case types.TASK_ALL:\r\n            return state;\r\n\r\n        case types.SAVE_TASK:\r\n            var task = {\r\n                id : action.task.id,\r\n                name : action.task.name,\r\n                status : action.task.status,\r\n                level : action.task.level\r\n            }\r\n            if(task.id === null){\r\n                task.id = uuidv4();\r\n                state.push(task);\r\n            }else{\r\n                index = findIndex(state, task.id);\r\n                state[index] = task;\r\n            }\r\n            \r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        case types.DELETE_TASK:\r\n            var id = action.id;\r\n            _.remove(state, (task)=>{\r\n                    return task.id === id;\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        \r\n        default : return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from './../constants/actionType';\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState , action) =>{\r\n    switch(action.type){\r\n        case types.TOGGLE_FORM:\r\n            return !state;\r\n        case types.CLOSE_FORM:\r\n            return false;\r\n        case types.OPEN_FORM:\r\n            return true;\r\n        default : return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from './../constants/actionType';\r\n\r\nvar initialState = {\r\n    id : '',\r\n    name : '',\r\n    level : 0,\r\n    status : 0\r\n};\r\n\r\nvar myReducer = (state = initialState , action) =>{\r\n    switch(action.type){\r\n       \r\n        case types.EDIT_TASK:\r\n            console.log(action.task)\r\n            return action.task;\r\n        default : return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from './../constants/actionType';\r\n\r\n\r\n\r\nvar initialState = '';\r\n\r\n\r\nvar myReducer = (state = initialState , action) =>{\r\n    \r\n    switch(action.type){\r\n        case types.SEARCH_TASK:\r\n            return action.keyword;\r\n\r\n        \r\n        default : return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from './../constants/actionType';\r\n\r\nvar initialState = {\r\n    sortBy : '',\r\n    sortDir : ''\r\n};\r\n\r\nvar myReducer = (state = initialState , action) =>{\r\n    \r\n    switch(action.type){\r\n        case types.SORT_TASK:\r\n            return {\r\n                sortBy : action.sort.sortBy,\r\n                sortDir : action.sort.sortDir\r\n            };\r\n\r\n        \r\n        default : return state;\r\n    }\r\n}\r\nexport default myReducer;","import {combineReducers} from 'redux';\r\nimport tasks from './tasks';\r\nimport isShowForm from './isShowForm';\r\nimport taskSelected from './taskSelected';\r\nimport strSearch from './search';\r\nimport sort from './sort';\r\nconst myReducer = combineReducers({\r\n    tasks,\r\n    isShowForm,\r\n    taskSelected,\r\n  strSearch,\r\n  sort\r\n})\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux';\nimport myReducers from './reducers/index';\nimport {Provider} from 'react-redux';\n\nconst store  = createStore(\n  myReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}